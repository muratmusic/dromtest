Суть задания: 
Разработать приложение на Objective-C для iPhone без использования Interface Builder,
версия iOS 7.0+, без использования сторонних фреймворков, только iOS SDK.

1) Необходимо создать приложение, основанное на UINavigationController,
с поддержкой горизонтальной и вертикальной ориентации.
2) Во ViewController'е разместить UICollectionView, количество ячеек - 6,
ширина ячейки - ширина экрана с полями по 10 пикселей со всех сторон. Высота ячейки равна ширине.
3) В каждую ячейку загрузить асинхронно по мере необходимости (при появлении на экране)
картинку с Интернета (любую, но не меньше 800 пикселей в ширину и 600 в высоту).
4) Если картинка хоть раз загрузилась, то она должна показываться потом даже без соединения с Интернетом
(оффлайн кэш).
5) При нажатии на ячейку, в которой уже загрузилась картинки, ячейка должна анимированно уезжать вправо
до конца экрана, после чего все оставшиеся снизу ячейки должны сдвинуться анимированно вверх
на одну ячейку, чтобы занять место удаленной ячейки.
6) Добавить к UICollectionView контролл "pull-to-refresh", который должен полностью восстановить
исходное состояние UICollectionView и заново загружать все скачанные ранее картинки
(восстанавливать состояние можно без анимации).


ЧТО ДОДЕЛАТЬ:

1) Отображение сообщения когда интернет-соединение недоступно
2) Отображение надписи в проблемных ячейках: например "Изображение по заданному URL недоступно"
3) Обработка таймаута - например не допускать чтобы пользователь ждал более 30 секунд загрузку изображения,
в противном случае показывать "Слишком долгое ожидание / сервер не отвечает"
4) В случае если слишком долгая загрузка (предыдущий пункт) или обрыв соединения, информировать пользователя о необходимости
"Pull down to refresh" чтобы попытаться загрузить картинки заново
5) Выяснить у заказчика данного проекта:
нужно ли нам загрузить картинки после восстановления интернет-соединения, если не удалось успеть до обрыва соединения?
7) Сделать ограничение на размер кэша в памяти (см. ImageCache)
11) Нужна обработка ошибок в нескольких методах: мы предполагаем что у нас всё в порядке, что хватает дискового пространства,
что успешно сохранилась картинка в виде файла.
12) НЕДОСТАТОК ТЕКУЩЕЙ РЕАЛИЗАЦИИ: при большом количестве картинок они все после их загрузки хранятся в памяти
(ImageData имеет ссылку на картинку полученную из ImageCache). Этот недостаток можно устранить:
а) ограничить максимально допустимое количество картинок в кэше памяти (см. ImageCache)
б) выгружать из памяти те картинки которые в настоящий момент не показываем на экране (оставлять только в файловом кэше, см. ImageCache)
13) Чтобы на всех симуляторах был Full Screen, необходимо использовать картинки Launch Screen всех нужных размеров
